# This file is required for running the API via the make commands
spring:
  elasticsearch:
    rest:
      uris: ${ELASTICSEARCH_URL}
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

dynamo:
  config:
    region: eu-west-2
    endpoint: ${POSTCODE_LOCATION_DYNAMO_URL}
  table:
    name: ${DYNAMODB_POSTCODE_LOC_MAP_TABLE}

server:
  port: ${SERVER_PORT}
  ssl:
    key-store-type: PKCS12
    keystore: classpath:certificate/${CERTIFICATE_DOMAIN}.p12
    key-store-password:

api:
  endpoint:
    service_search: ${API_SERVICE_SEARCH_ENDPOINT}
  cors:
    allowedorigins: ${ALLOWED_ORIGINS}

configuration:
  version: ${VERSION}
  validation:
    min_search_term_length: ${MIN_SEARCH_TERM_LENGTH}
    max_search_criteria: ${MAX_SEARCH_CRITERIA}
  search_parameters:
    max_num_services_to_return_from_elasticsearch: ${MAX_NUM_SERVICES_TO_RETURN_FROM_ELASTICSEARCH}
    max_num_services_to_return_from_elasticsearch_3_search_terms: ${MAX_NUM_SERVICES_TO_RETURN_FROM_ELASTICSEARCH_3_SEARCH_TERMS}
    max_num_services_to_return: ${MAX_NUM_SERVICES_TO_RETURN}
    fuzz_level: ${FUZZ_LEVEL}
    name_priority: ${NAME_PRIORITY}
    address_priority: ${ADDRESS_PRIORITY}
    postcode_priority: ${POSTCODE_PRIORITY}
    public_name_priority: ${PUBLIC_NAME_PRIORITY}

cognito:
  userPool.clientId: 5lhdm72j98qjuju66opb9uib2a
  userPool.id: eu-west-2_XqDsDAZKj
  userPool.clientSecret: 1csr2ngn594iau02ipc3nca6tmm64fgejli4c2gf2tht48la3e40

  # userPool.id: eu-west-2_Ska4RxXWC
  # userPool.clientId: 2gg7oedoho5tshcin734t51ct6
  # userPool.clientSecret: uunuj22sp18jl1ier9igmi5rt7u2sgaah6gf91kgqfu6c5bnv1d

  # userPool.clientId: ${COGNITO_USER_POOL_CLIENT_ID}
  # userPool.id: ${COGNITO_USER_POOL_ID}
  # userPool.clientSecret: ${COGNITO_USER_POOL_CLIENT_SECRET}
